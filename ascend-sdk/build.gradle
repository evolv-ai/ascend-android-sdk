apply plugin: 'com.android.library'
apply plugin: 'signing'
apply plugin: 'maven'

group = "ai.evolv"
archivesBaseName = "ascend-android-sdk"
version = "0.6.1"

android {
    compileSdkVersion 28

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName version

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

}

dependencies {
    compileOnly 'com.android.support:appcompat-v7:28.0.0'
    compileOnly 'com.squareup.okhttp3:okhttp:3.14.0'

    implementation 'com.google.guava:guava:27.1-android'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'org.slf4j:slf4j-api:1.7.26'

    testImplementation 'junit:junit:4.12'
    testImplementation 'com.noveogroup.android:android-logger:1.3.5'
    testImplementation 'org.mockito:mockito-all:1.10.19'
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

signing {
    sign configurations.archives
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: ossrhUsername, password: ossrhPassword)
            }

            pom.project {
                name 'Ascend SDK'
                packaging 'jar'
                // optionally artifactId can be defined here
                description 'SDK to interact with the Ascend product.'
                url 'https://www.evolv.ai/ascend/'

                scm {
                    connection 'scm:git:git://github.com/evolv-ai/ascend-java-sdk.git'
                    developerConnection 'scm:git:ssh:git@github.com:evolv-ai/ascend-java-sdk.git'
                    url 'https://github.com/evolv-ai/ascend-java-sdk'
                }

                licenses {
                    license {
                        name 'The Apache License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id 'frazerbayley'
                        name 'Frazer Bayley'
                        email 'frazer.bayley@evolv.ai'
                    }
                }
            }
        }
    }
}
